# Starter pipeline

trigger:
- main

stages:
- stage: Build
  jobs:
  - job: J1
    pool:
      vmImage: ubuntu-22.04
    steps:

    # Builder for ARM32
    - script: |
        docker run --privileged --rm tonistiigi/binfmt --install all
        docker buildx create --use --name multiarch
        docker buildx inspect --bootstrap
      displayName: 'Setup Docker Buildx for ARM32'

    # AMBIENT
    - script: |
        cd ./modules/$(MODULE_AMBIENT)
        docker buildx build --platform linux/arm/v7 -t $(CONTAINER_REGISTRY_ADDRESS)/$(MODULE_AMBIENT):$(MODULE_VERSION_AMBIENT) --push .
      displayName: 'Build and Push ARM32 Image: Ambient'

    # SOIL
    - script: |
        cd ./modules/$(MODULE_SOIL)
        docker buildx build --platform linux/arm/v7 -t $(CONTAINER_REGISTRY_ADDRESS)/$(MODULE_SOIL):$(MODULE_VERSION_SOIL) --push .
      displayName: 'Build and Push ARM32 Image: Soil'

    # LEAVES
    - script: |
        cd ./modules/$(MODULE_LEAVES)
        docker buildx build --platform linux/arm/v7 -t $(CONTAINER_REGISTRY_ADDRESS)/$(MODULE_LEAVES):$(MODULE_VERSION_LEAVES) --push .
      displayName: 'Build and Push ARM32 Image: Leaves'


- stage: Release
  jobs:
  - job: J2
    pool:
      vmImage: ubuntu-22.04
    steps:
      - script: |
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.9

          sudo apt install python3.9-distutils
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3.9 get-pip.py

          python3.9 -m pip install -U iotedgedev pyOpenSSL==22.0.0 urllib3==1.22 requests
        displayName: 'Command Line Script'
      - task: AzureIoTEdge@2
        inputs:
          action: 'Generate deployment manifest'
          templateFilePath: 'deployment.template.json'
          defaultPlatform: 'arm64v8'
          deploymentManifestOutputPath: '$(System.DefaultWorkingDirectory)/config/deployment.json'
          validateGeneratedDeploymentManifest: 'false'
      - task: AzureIoTEdge@2
        inputs:
          action: 'Deploy to IoT Edge devices'
          deploymentFilePath: '$(System.DefaultWorkingDirectory)/config/deployment.json'
          azureSubscription: 'Azure for Students(4)(cdbe522d-a95d-4d8c-b999-af7984931bc9)'
          iothubname: 'IoTHubPlantTFM'
          deploymentid: '$(System.TeamProject)-devops-deployment'
          priority: '0'
          deviceOption: 'Single Device'
          deviceId: 'raspberrypi4'